package studentRepositories

//6256000792 11/1/2534 รูปแบบ วว/ดด/ปปปป
func (r studentRepositories) AuthenticateBachelor(std_code string, birth_date string, lev_id string) (*StudentAuthenticationRepositoriesFromDB, error) {

	student := StudentAuthenticationRepositoriesFromDB{}

	query := "SELECT A.STD_CODE,A.PRENAME_NO,P.PRENAME_THAI_S AS PRENAME_THAI,P.PRENAME_ENG_S AS PRENAME_ENG,A.FIRST_NAME_THAI,A.FIRST_NAME_ENG,A.LAST_NAME_THAI,A.LAST_NAME_ENG,A.SEX,TO_CHAR(A.BIRTH_DATE,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AS BIRTH_DATE,A.FACULTY_NO,FC.FACULTY_NAME_THAI AS FACULTY_NAME_THAI,FC.FACULTY_NAME_ENG AS FACULTY_NAME_ENG,A.CURR_NO,A.MAJOR_NO,M.MAJOR_FLAG AS MAJOR_FLAG,M.MAJOR_NAME_THAI AS MAJOR_NAME_THAI,M.MAJOR_NAME_ENG AS MAJOR_NAME_ENG,'1' AS LEV_ID FROM UGB_STUDENT A,(SELECT PRENAME_NO,PRENAME_THAI_S,PRENAME_ENG_S FROM DBBACH00.UGB_PRENAME) P,(SELECT FACULTY_NO,FACULTY_NAME_THAI,FACULTY_NAME_ENG FROM DBBACH00.UGB_FACULTY) FC,(SELECT FACULTY_NO,CURR_NO,MAJOR_NO,MAJOR_FLAG,MAJOR_NAME_ENG,MAJOR_NAME_THAI FROM DBBACH00.UGB_MAJOR_TR) M WHERE A.STD_CODE = :param1 AND A.BIRTH_DATE = TO_DATE(:param2,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AND (A.STD_STATUS_CURRENT = 'A' OR A.STD_STATUS_CURRENT = 'B' OR A.STD_STATUS_CURRENT = 'C' OR A.STD_STATUS_CURRENT = 'E') AND A.PRENAME_NO = P.PRENAME_NO AND A.FACULTY_NO = FC.FACULTY_NO AND A.FACULTY_NO = M.FACULTY_NO AND A.CURR_NO = M.CURR_NO AND A.MAJOR_NO = M.MAJOR_NO"

	err := r.db.Get(&student, query, std_code, birth_date)
	if err != nil {
		return nil, err
	}

	return &student, nil

}

//6014832050 17/10/2500 รูปแบบ วว/ดด/ปปปป
func (r studentRepositories) AuthenticateMaster(std_code string, birth_date string, lev_id string) (*StudentAuthenticationRepositoriesFromDB, error) {

	student := StudentAuthenticationRepositoriesFromDB{}

	query := "SELECT A.STD_CODE,A.PRENAME_NO,P.PRENAME_THAI_S AS PRENAME_THAI,P.PRENAME_ENG_S AS PRENAME_ENG,(CASE WHEN A.NAME_THAI IS NOT NULL THEN substr(A.NAME_THAI,1,INSTR(A.NAME_THAI,' ') -1) ELSE '' END) AS FIRST_NAME_THAI,(CASE WHEN A.NAME_ENG IS NOT NULL THEN substr(A.NAME_ENG,1,INSTR(A.NAME_ENG,' ') -1) ELSE '' END) AS FIRST_NAME_ENG,(CASE WHEN A.NAME_THAI IS NOT NULL THEN substr(A.NAME_THAI,INSTR(A.NAME_THAI,' ',-1) +1) ELSE '' END) AS LAST_NAME_THAI,(CASE WHEN A.NAME_ENG IS NOT NULL THEN substr(A.NAME_ENG,INSTR(A.NAME_ENG,' ',-1) +1) ELSE '' END) AS LAST_NAME_ENG,TO_CHAR(A.BIRTH_DATE,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AS BIRTH_DATE,C.FACULTY_NO,FC.FACULTY_NAME_THAI,FC.FACULTY_NAME_ENG,C.CURR_NO,C.MAJOR_NO,'' AS MAJOR_FLAG,C.THAI_NAME AS MAJOR_NAME_THAI,C.ENG_NAME AS MAJOR_NAME_ENG,(CASE WHEN A.DEGREE_NAME IS NOT NULL THEN CASE WHEN A.DEGREE_NAME = 'ปริญญาโท' THEN '2' ELSE '' END ELSE '' END) AS LEV_ID FROM (SELECT * FROM DBGRAD00.VM_STUDENT WHERE (STD_STATUS = 'A' OR STD_STATUS = 'B' OR STD_STATUS = 'C' OR STD_STATUS = 'E') ) A,(SELECT PRENAME_NO,PRENAME_THAI_S,PRENAME_ENG_S FROM DBBACH00.UGB_PRENAME) P,(SELECT FACULTY_NO,CURR_NO,MAJOR_NO,THAI_NAME,ENG_NAME FROM DBGRAD00.B_CURRICULUM) C,(SELECT FACULTY_NO,FACULTY_NAME_THAI,FACULTY_NAME_ENG FROM DBBACH00.UGB_FACULTY) FC WHERE A.STD_CODE = :param1 AND A.BIRTH_DATE = TO_DATE(:param2,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AND P.PRENAME_NO = A.PRENAME_NO AND A.CURR_NO = C.CURR_NO AND A.MAJOR_NO = C.MAJOR_NO AND C.CURR_NO = FC.FACULTY_NO"

	err := r.db.Get(&student, query, std_code, birth_date)
	if err != nil {
		return nil, err
	}

	return &student, nil

}


//6014832050 17/10/2500 รูปแบบ วว/ดด/ปปปป
func (r studentRepositories) AuthenticatePhd(std_code string, birth_date string, lev_id string) (*StudentAuthenticationRepositoriesFromDB, error) {

	student := StudentAuthenticationRepositoriesFromDB{}

	query := "SELECT A.STD_CODE,A.PRENAME_NO,P.PRENAME_THAI_S AS PRENAME_THAI,P.PRENAME_ENG_S AS PRENAME_ENG,(CASE WHEN A.NAME_THAI IS NOT NULL THEN substr(A.NAME_THAI,1,INSTR(A.NAME_THAI,' ') -1) ELSE '' END) AS FIRST_NAME_THAI,(CASE WHEN A.NAME_ENG IS NOT NULL THEN substr(A.NAME_ENG,1,INSTR(A.NAME_ENG,' ') -1) ELSE '' END) AS FIRST_NAME_ENG,(CASE WHEN A.NAME_THAI IS NOT NULL THEN substr(A.NAME_THAI,INSTR(A.NAME_THAI,' ',-1) +1) ELSE '' END) AS LAST_NAME_THAI,(CASE WHEN A.NAME_ENG IS NOT NULL THEN substr(A.NAME_ENG,INSTR(A.NAME_ENG,' ',-1) +1) ELSE '' END) AS LAST_NAME_ENG,TO_CHAR(A.BIRTH_DATE,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AS BIRTH_DATE,C.FACULTY_NO,FC.FACULTY_NAME_THAI,FC.FACULTY_NAME_ENG,C.CURR_NO,C.MAJOR_NO,'' AS MAJOR_FLAG,C.THAI_NAME AS MAJOR_NAME_THAI,C.ENG_NAME AS MAJOR_NAME_ENG,(CASE WHEN A.DEGREE_NAME IS NOT NULL THEN CASE WHEN A.DEGREE_NAME = 'ปริญญาโท' THEN '2' ELSE '' END ELSE '' END) AS LEV_ID FROM (SELECT * FROM DBGRAD00.VM_STUDENT WHERE (STD_STATUS = 'A' OR STD_STATUS = 'B' OR STD_STATUS = 'C' OR STD_STATUS = 'E') ) A,(SELECT PRENAME_NO,PRENAME_THAI_S,PRENAME_ENG_S FROM DBBACH00.UGB_PRENAME) P,(SELECT FACULTY_NO,CURR_NO,MAJOR_NO,THAI_NAME,ENG_NAME FROM DBPHD00.D_CURRICULUM) C,(SELECT FACULTY_NO,FACULTY_NAME_THAI,FACULTY_NAME_ENG FROM DBBACH00.UGB_FACULTY) FC WHERE A.STD_CODE = :param1 AND A.BIRTH_DATE = TO_DATE(:param2,'DD/MM/YYYY','NLS_CALENDAR=''THAI BUDDHA'' NLS_DATE_LANGUAGE=THAI') AND P.PRENAME_NO = A.PRENAME_NO AND A.CURR_NO = C.CURR_NO AND A.MAJOR_NO = C.MAJOR_NO AND C.CURR_NO = FC.FACULTY_NO"

	err := r.db.Get(&student, query, std_code, birth_date)
	if err != nil {
		return nil, err
	}

	return &student, nil

}